{"version":3,"sources":["webpack:///src/app/pages/feedback/feedback.page.html","webpack:///src/app/pages/feedback/feedback-routing.module.ts","webpack:///src/app/pages/feedback/feedback.module.ts","webpack:///src/app/pages/feedback/feedback.page.scss","webpack:///src/app/pages/feedback/feedback.page.ts"],"names":["routes","path","component","FeedbackPageRoutingModule","imports","forChild","exports","FeedbackPageModule","declarations","Storage","FeedbackPage","router","formBuilder","commonService","apiService","isSubmitted","ionicForm","group","comments","required","maxLength","valid","showError","showLoader","formData","FormData","append","get","value","userData","getObject","addFeedback","subscribe","response","console","log","hideLoader","showSuccess","localStorage","getItem","navigate","key","item","JSON","parse","controls","selector","template"],"mappings":"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","file":"pages-feedback-feedback-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button auto-hide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Feedback</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card id=\\\"signUpCard\\\">\\n    <ion-card-header class=\\\"center\\\">\\n      Add Feedback\\n    </ion-card-header>\\n    <ion-card-content>\\n      \\n      <form [formGroup]=\\\"ionicForm\\\" (ngSubmit)=\\\"submitFeedback()\\\" novalidate>\\n\\n        <ion-item >\\n          <!--<ion-label position=\\\"floating\\\" class=\\\"mandatory\\\">Comments</ion-label>-->\\n          <ion-textarea (change)=\\\"trackValueChange()\\\" formControlName=\\\"comments\\\" placeholder=\\\"Enter your Feedback here...\\\"></ion-textarea>\\n        </ion-item>\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.comments.errors?.required\\\">\\n         Comments cannot be empty.\\n        </span>\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.comments.errors?.maxlength\\\">\\n          Maximum 250 charecter is allowed\\n        </span>\\n\\n        \\n        <ion-button type=\\\"submit\\\" expand=\\\"block\\\">Send</ion-button>\\n\\n    \\n        \\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FeedbackPage } from './feedback.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FeedbackPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FeedbackPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FeedbackPageRoutingModule } from './feedback-routing.module';\n\nimport { FeedbackPage } from './feedback.page';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    FeedbackPageRoutingModule\n  ],\n  declarations: [FeedbackPage]\n})\nexport class FeedbackPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2ZlZWRiYWNrL2ZlZWRiYWNrLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { CommonService } from '../../services/common.service';//common serviec\nimport { Plugins } from '@capacitor/core';\nimport { ApiService } from '../../services/api.service';\nimport { FormsModule,ReactiveFormsModule  } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nconst { Storage } = Plugins;\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.page.html',\n  styleUrls: ['./feedback.page.scss'],\n})\nexport class FeedbackPage implements OnInit {\n  ionicForm: FormGroup;\n  isSubmitted = false;\n\n  constructor(private router:Router,public formBuilder: FormBuilder,private commonService:CommonService,private apiService:ApiService) { }\n\n  ngOnInit() {\n\n    this.ionicForm = this.formBuilder.group({\n      comments: ['', [Validators.required, Validators.maxLength(255)]]\n     \n    })\n  }\n\n  submitFeedback()\n  {\n    if (!this.ionicForm.valid)\n    {\n      this.commonService.showError(\"Please provide valid data\");\n      return;\n    }\n    this.isSubmitted=true;\n    this.commonService.showLoader();\n    var formData: any = new FormData();\n    formData.append(\"feedback\", this.ionicForm.get('comments').value);\n    let userData=this.getObject(\"userData\");\n    formData.append(\"userid\",userData['userid']);\n    this.apiService.addFeedback(formData).subscribe((response) => {\n      console.log(response);\n      this.commonService.hideLoader();\n      \n      if(response['status']==1)\n      {\n        this.commonService.showSuccess(\"Feedback submitted successfully\");\n        if(localStorage.getItem(\"user_type\")==\"ADMIN\")\n         this.router.navigate(['/dashboard'])\n         else\n         this.router.navigate(['/home'])\n      }\n      else\n      {\n        this.commonService.showError(response['message']);\n      }\n\n\n    });\n    \n\n  }\n\n  get errorControl() {\n    return this.ionicForm.controls;\n  }\n\n  trackValueChange()\n  {\n    this.isSubmitted=true;\n  }\n\n  async getObject(key:string) {\n    const item = await Storage.get({ key: key });\n    return JSON.parse(item.value);\n  }\n\n}\n"]}